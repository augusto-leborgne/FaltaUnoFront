name: Deploy Frontend to Cloud Run

on:
  push:
    branches:
      - main
  workflow_dispatch:

env:
  GCP_PROJECT_ID: master-might-274420
  GCP_REGION: us-central1
  SERVICE_NAME: faltauno-frontend

jobs:
  deploy-frontend:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}
      
      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v2
      
      - name: Configure Docker for GCP
        run: |
          gcloud auth configure-docker ${{ env.GCP_REGION }}-docker.pkg.dev
      
      - name: Build with Cloud Build
        run: |
          # Backend URL - ACTUALIZADO para Cloud Run
          BACKEND_URL="https://faltauno-backend-169771742214.us-central1.run.app"
          
          # Generate commit SHA
          COMMIT_SHA=${{ github.sha }}
          SHORT_SHA=$(echo $COMMIT_SHA | cut -c1-7)
          echo "Building frontend with commit: $SHORT_SHA"

          # Build using Cloud Build (más eficiente y consistente)
          gcloud builds submit \
            --config=cloudbuild-prod.yaml \
            --project=${{ env.GCP_PROJECT_ID }} \
            --substitutions="SHORT_SHA=$SHORT_SHA,_NEXT_PUBLIC_API_URL=$BACKEND_URL,_NEXT_PUBLIC_GOOGLE_MAPS_API_KEY=${{ secrets.NEXT_PUBLIC_GOOGLE_MAPS_API_KEY }}"
          
          echo "✅ Image built: us-central1-docker.pkg.dev/master-might-274420/cloud-run-source-deploy/faltauno-frontend:${SHORT_SHA}-prod"
      
      - name: Deploy to Cloud Run
        run: |
          COMMIT_SHA=${{ github.sha }}
          SHORT_SHA=$(echo $COMMIT_SHA | cut -c1-7)
          BACKEND_URL="https://faltauno-backend-169771742214.us-central1.run.app"
          
          # Deploy usando la imagen construida con Cloud Build
          gcloud run deploy ${{ env.SERVICE_NAME }} \
            --image us-central1-docker.pkg.dev/${{ env.GCP_PROJECT_ID }}/cloud-run-source-deploy/${{ env.SERVICE_NAME }}:${SHORT_SHA}-prod \
            --platform managed \
            --region ${{ env.GCP_REGION }} \
            --allow-unauthenticated \
            --memory 512Mi \
            --cpu 1 \
            --min-instances 0 \
            --max-instances 10 \
            --port 8080 \
            --tag "sha-$SHORT_SHA" \
            --project ${{ env.GCP_PROJECT_ID }} \
            --quiet
          
          echo "✅ Deployment completed"
      
      - name: Migrate Traffic to New Revision
        run: |
          # Get the new revision name
          NEW_REVISION=$(gcloud run revisions list \
            --service ${{ env.SERVICE_NAME }} \
            --platform managed \
            --region ${{ env.GCP_REGION }} \
            --format 'value(name)' \
            --sort-by='~metadata.creationTimestamp' \
            --limit 1 \
            --project ${{ env.GCP_PROJECT_ID }})
          
          echo "Migrating 100% traffic to: $NEW_REVISION"
          
          # Route 100% traffic to new revision (zero downtime cutover)
          gcloud run services update-traffic ${{ env.SERVICE_NAME }} \
            --to-revisions=$NEW_REVISION=100 \
            --region ${{ env.GCP_REGION }} \
            --platform managed \
            --project ${{ env.GCP_PROJECT_ID }}
          
          echo "✅ Traffic migrated successfully"
      
      - name: Get Service URL
        id: get-url
        run: |
          URL=$(gcloud run services describe ${{ env.SERVICE_NAME }} \
            --platform managed \
            --region ${{ env.GCP_REGION }} \
            --format 'value(status.url)')
          echo "Frontend URL: $URL"
          echo "url=$URL" >> $GITHUB_OUTPUT
      
      - name: Verify deployment
        run: |
          sleep 20
          curl -f ${{ steps.get-url.outputs.url }}/api/health || echo "⚠️ Health check failed, but deployment completed"
      
      - name: Deployment summary
        run: |
          echo "🎉 Frontend deployed successfully!"
          echo "URL: ${{ steps.get-url.outputs.url }}"
